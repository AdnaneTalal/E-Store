@model E_Store.Models.Product

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>
<style>    .body-background {
        background-image: linear-gradient(to right top, #000000, #3a3d51, #798182);
        border-radius: 30px
    }

    }
    .card {
        width: 100%;
        border-radius: 30px
    }

    .form-control {
        height: 45px;
        border-radius: 10px
    }

        .form-control:focus {
            box-shadow:100px
        }

    .btn-success {
        height: 50px;
        border-radius: 10px
    } </style>

@using (Html.BeginForm("Edit", "Products", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

        <div class="container-fluid bg-dark d-flex justify-content-center align-items-center  h-100 p-3">
            
    <div class="body-background w-100">
        <div class="card p-3  py-4 body-background  ">
            <h4 class="text-capitalize text-black text-center fs-1" >Product </h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.ID)

        <form>
            <div class="container row row-cols-2 ">

                <div class="col-md-6  ">
                    <div class="form-group">
                        <div class="col-md-6 ">
                            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })

                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-6">
                            @Html.LabelFor(model => model.CategoryID, "CategoryID", htmlAttributes: new { @class = "control-label" })

                            @Html.DropDownList("CategoryID", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.CategoryID, "", new { @class = "text-danger" })
                        </div>

                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label " })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control " } })
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        </div>
                    </div>







                </div>


                <div class="col-md-6  ">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label " })
                        <img src="~/image/products/@Html.DisplayFor(model => model.Image)" alt="image" width=200 height="200" />
                        <div class="col-md-10">


                            @Html.EditorFor(model => model.Image, new { htmlAttributes = new { @class = "form-control", @name = "Image", @readonly = "true" } })
                            <input type="file" name="Image" />

                            @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>



            </div>
            <div class="form-group">
                <div class="col my-5 align-self-end">
                    <input type="submit" value="Save" class="btn btn-success w-100" />
                </div>
            </div>

        </form>


        </div>
        </div>

    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
